{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./libs/dynamodb-lib.js","webpack:///./libs/response-lib.js","webpack:///./updateprefs.js","webpack:///external \"aws-sdk\"","webpack:///external \"babel-runtime/core-js/json/stringify\"","webpack:///external \"babel-runtime/helpers/asyncToGenerator\"","webpack:///external \"babel-runtime/regenerator\"","webpack:///external \"source-map-support/register\""],"names":["call","AWS","config","update","region","action","params","dynamoDb","DynamoDB","DocumentClient","promise","success","failure","body","buildResponse","statusCode","headers","event","context","callback","data","JSON","parse","TableName","Key","userid","requestContext","identity","cognitoIdentityId","UpdateExpression","ExpressionAttributeValues","longitude","latitude","ReturnValues","dynamoDbLib","result","status","main"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;QC/DgBA,I,GAAAA,I;;;;AAJhB;;;;;;AAEAC,iBAAIC,MAAJ,CAAWC,MAAX,CAAkB,EAAEC,QAAQ,WAAV,EAAlB;;AAEO,SAASJ,IAAT,CAAcK,MAAd,EAAsBC,MAAtB,EAA8B;AACnC,MAAMC,WAAW,IAAIN,iBAAIO,QAAJ,CAAaC,cAAjB,EAAjB;;AAEA,SAAOF,SAASF,MAAT,EAAiBC,MAAjB,EAAyBI,OAAzB,EAAP;AACD,C;;;;;;;;;;;;;;;;;;;;;;QCReC,O,GAAAA,O;QAIAC,O,GAAAA,O;;;;;;AAJT,SAASD,OAAT,CAAiBE,IAAjB,EAAuB;AAC5B,SAAOC,cAAc,GAAd,EAAmBD,IAAnB,CAAP;AACD;;AAEM,SAASD,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,SAAOC,cAAc,GAAd,EAAmBD,IAAnB,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,UAAvB,EAAmCF,IAAnC,EAAyC;AACvC,SAAO;AACLE,gBAAYA,UADP;AAELC,aAAS;AACP,qCAA+B,GADxB;AAEP,0CAAoC;AAF7B,KAFJ;AAMLH,UAAM,yBAAeA,IAAf;AAND,GAAP;AAQD,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;sFCdM,iBAAoBI,KAApB,EAA2BC,OAA3B,EAAoCC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gBADD,GACQC,KAAKC,KAAL,CAAWL,MAAMJ,IAAjB,CADR;AAGCP,kBAHD,GAGU;AACbiB,yBAAW,kBADE;AAEb;AACA;AACAC,mBAAK;AACHC,wBAAQR,MAAMS,cAAN,CAAqBC,QAArB,CAA8BC;AADnC,eAJQ;AAOb;AACA;AACAC,gCAAkB,kDATL;AAUbC,yCAA2B;AACzB,8BAAcV,KAAKW,SAAL,GAAiBX,KAAKW,SAAtB,GAAkC,IADvB;AAEzB,6BAAaX,KAAKY,QAAL,GAAgBZ,KAAKY,QAArB,GAAgC;AAFpB,eAVd;AAcbC,4BAAc;AAdD,aAHV;AAAA;AAAA;AAAA,mBAqBkBC,YAAYlC,IAAZ,CAAiB,QAAjB,EAA2BM,MAA3B,CArBlB;;AAAA;AAqBG6B,kBArBH;;AAsBHhB,qBAAS,IAAT,EAAe,0BAAQ,EAAEiB,QAAQ,IAAV,EAAR,CAAf;AAtBG;AAAA;;AAAA;AAAA;AAAA;;AAwBHjB,qBAAS,IAAT,EAAe,0BAAQ,EAAEiB,QAAQ,KAAV,EAAR,CAAf;;AAxBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,I;;;;;;;AAHtB;;IAAYH,W;;AACZ;;;;;;;;;;;;;;;ACDA,oC;;;;;;;;;;;ACAA,iE;;;;;;;;;;;ACAA,mE;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,wD","file":"updateprefs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./updateprefs.js\");\n","import AWS from \"aws-sdk\";\n\nAWS.config.update({ region: \"us-east-1\" });\n\nexport function call(action, params) {\n  const dynamoDb = new AWS.DynamoDB.DocumentClient();\n\n  return dynamoDb[action](params).promise();\n}\n\n","export function success(body) {\n  return buildResponse(200, body);\n}\n\nexport function failure(body) {\n  return buildResponse(500, body);\n}\n\nfunction buildResponse(statusCode, body) {\n  return {\n    statusCode: statusCode,\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Credentials\": true\n    },\n    body: JSON.stringify(body)\n  };\n}\n\n","import * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\n\nexport async function main(event, context, callback) {\n  const data = JSON.parse(event.body);\n  \n  const params = {\n    TableName: \"yelp_preferences\",\n    // 'Key' defines the partition key and sort key of the item to be updated\n    // - 'userId': Identity Pool identity id of the authenticated user\n    Key: {\n      userid: event.requestContext.identity.cognitoIdentityId,\n    },\n    // 'UpdateExpression' defines the attributes to be updated\n    // 'ExpressionAttributeValues' defines the value in the update expression\n    UpdateExpression: \"SET longitude = :longitude, latitude = :latitude\",\n    ExpressionAttributeValues: {\n      \":longitude\": data.longitude ? data.longitude : null,\n      \":latitude\": data.latitude ? data.latitude : null\n    },\n    ReturnValues: \"ALL_NEW\"\n  };\n\n  try {\n    const result = await dynamoDbLib.call(\"update\", params);\n    callback(null, success({ status: true }));\n  } catch (e) {\n    callback(null, failure({ status: false }));\n  }\n}","module.exports = require(\"aws-sdk\");","module.exports = require(\"babel-runtime/core-js/json/stringify\");","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"source-map-support/register\");"],"sourceRoot":""}